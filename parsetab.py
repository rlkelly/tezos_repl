
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS ADD AND BOOL BYTES CAR CDR COMPARE CONCAT CONS DROP DUP EDIV EMPTY_MAP EMPTY_SET EQ EXEC FAILWITH FALSE GE GET GT IF_CONS INT ITER LAMBDA LBRACKET LE LEFT LPAIR LPARENS LSL LSR LT MAP MEM MUL NAT NEG NEQ NIL NONE NOT NUMBER OPERATION OR PAIR PAIR_CONSTRUCTOR PUSH RBRACKET RIGHT RPARENS SCOLON SIZE SLICE SOME STRING SUB SWAP TEXT TRUE UNIT UPDATE XORexecution : compound_statement\n            | compound_statement SCOLON\n            | bodycompound_statement : stmt\n            | compound_statement SCOLON stmtbody : LBRACKET compound_statement SCOLON RBRACKET\n            | LBRACKET compound_statement RBRACKET\n            | LBRACKET RBRACKETstmt : LAMBDA type type bodystmt : DROPstmt : DUPstmt : SWAPstmt : UNITbool : TRUE\n        | FALSE value : NUMBER\n        | bool\n        | TEXT\n        | LPARENS PAIR_CONSTRUCTOR value value RPARENS stmt : EQ\n        | NEQ\n        | LT\n        | GT\n        | LE\n        | GE  stmt : OR\n        | AND\n        | XOR  stmt : COMPAREstmt : NEG\n         | ABS\n         | ADD\n         | SUB\n         | MUL\n         | EDIV\n         | LSL\n         | LSR stmt : SIZEstmt : CONCAT\n            | SLICEstmt : PAIR\n            | CAR\n            | CDR stmt : EMPTY_SET type\n            | MEM\n            | UPDATE stmt : EMPTY_MAP type type\n            | MAP body\n            | ITER body\n            | GETstmt : IF_CONS body bodystmt : SOME\n            | NONE type stmt : LEFT type\n            | RIGHT type stmt : CONS\n            | NIL type stmt : NOTstmt : EXECtype : NAT\n        | STRING\n        | INT\n        | BOOL\n        | BYTES\n        | OPERATION\n        | LPARENS LPAIR type type RPARENS stmt : PUSH type valuestmt : FAILWITH'
    
_lr_action_items = {'LBRACKET':([0,39,40,42,55,57,58,59,60,61,62,68,76,77,88,94,],[5,5,5,5,-8,-60,-61,-62,-63,-64,-65,5,-7,5,-6,-66,]),'LAMBDA':([0,5,53,75,],[6,6,6,6,]),'DROP':([0,5,53,75,],[7,7,7,7,]),'DUP':([0,5,53,75,],[8,8,8,8,]),'SWAP':([0,5,53,75,],[9,9,9,9,]),'UNIT':([0,5,53,75,],[10,10,10,10,]),'EQ':([0,5,53,75,],[11,11,11,11,]),'NEQ':([0,5,53,75,],[12,12,12,12,]),'LT':([0,5,53,75,],[13,13,13,13,]),'GT':([0,5,53,75,],[14,14,14,14,]),'LE':([0,5,53,75,],[15,15,15,15,]),'GE':([0,5,53,75,],[16,16,16,16,]),'OR':([0,5,53,75,],[17,17,17,17,]),'AND':([0,5,53,75,],[18,18,18,18,]),'XOR':([0,5,53,75,],[19,19,19,19,]),'COMPARE':([0,5,53,75,],[20,20,20,20,]),'NEG':([0,5,53,75,],[21,21,21,21,]),'ABS':([0,5,53,75,],[22,22,22,22,]),'ADD':([0,5,53,75,],[23,23,23,23,]),'SUB':([0,5,53,75,],[24,24,24,24,]),'MUL':([0,5,53,75,],[25,25,25,25,]),'EDIV':([0,5,53,75,],[26,26,26,26,]),'LSL':([0,5,53,75,],[27,27,27,27,]),'LSR':([0,5,53,75,],[28,28,28,28,]),'SIZE':([0,5,53,75,],[29,29,29,29,]),'CONCAT':([0,5,53,75,],[30,30,30,30,]),'SLICE':([0,5,53,75,],[31,31,31,31,]),'PAIR':([0,5,53,75,],[32,32,32,32,]),'CAR':([0,5,53,75,],[33,33,33,33,]),'CDR':([0,5,53,75,],[34,34,34,34,]),'EMPTY_SET':([0,5,53,75,],[35,35,35,35,]),'MEM':([0,5,53,75,],[36,36,36,36,]),'UPDATE':([0,5,53,75,],[37,37,37,37,]),'EMPTY_MAP':([0,5,53,75,],[38,38,38,38,]),'MAP':([0,5,53,75,],[39,39,39,39,]),'ITER':([0,5,53,75,],[40,40,40,40,]),'GET':([0,5,53,75,],[41,41,41,41,]),'IF_CONS':([0,5,53,75,],[42,42,42,42,]),'SOME':([0,5,53,75,],[43,43,43,43,]),'NONE':([0,5,53,75,],[44,44,44,44,]),'LEFT':([0,5,53,75,],[45,45,45,45,]),'RIGHT':([0,5,53,75,],[46,46,46,46,]),'CONS':([0,5,53,75,],[47,47,47,47,]),'NIL':([0,5,53,75,],[48,48,48,48,]),'NOT':([0,5,53,75,],[49,49,49,49,]),'EXEC':([0,5,53,75,],[50,50,50,50,]),'PUSH':([0,5,53,75,],[51,51,51,51,]),'FAILWITH':([0,5,53,75,],[52,52,52,52,]),'$end':([1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,41,43,47,49,50,52,53,55,57,58,59,60,61,62,64,66,67,69,70,71,72,74,76,79,80,81,82,83,84,86,87,88,89,94,96,],[0,-1,-3,-4,-10,-11,-12,-13,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-45,-46,-50,-52,-56,-58,-59,-68,-2,-8,-60,-61,-62,-63,-64,-65,-44,-48,-49,-53,-54,-55,-57,-5,-7,-47,-51,-67,-16,-17,-18,-14,-15,-6,-9,-66,-19,]),'SCOLON':([2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,41,43,47,49,50,52,54,55,57,58,59,60,61,62,64,66,67,69,70,71,72,74,76,79,80,81,82,83,84,86,87,88,89,94,96,],[53,-4,-10,-11,-12,-13,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-45,-46,-50,-52,-56,-58,-59,-68,75,-8,-60,-61,-62,-63,-64,-65,-44,-48,-49,-53,-54,-55,-57,-5,-7,-47,-51,-67,-16,-17,-18,-14,-15,-6,-9,-66,-19,]),'RBRACKET':([4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,41,43,47,49,50,52,54,55,57,58,59,60,61,62,64,66,67,69,70,71,72,74,75,76,79,80,81,82,83,84,86,87,88,89,94,96,],[-4,55,-10,-11,-12,-13,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-45,-46,-50,-52,-56,-58,-59,-68,76,-8,-60,-61,-62,-63,-64,-65,-44,-48,-49,-53,-54,-55,-57,-5,88,-7,-47,-51,-67,-16,-17,-18,-14,-15,-6,-9,-66,-19,]),'NAT':([6,35,38,44,45,46,48,51,56,57,58,59,60,61,62,65,78,90,94,],[57,57,57,57,57,57,57,57,57,-60,-61,-62,-63,-64,-65,57,57,57,-66,]),'STRING':([6,35,38,44,45,46,48,51,56,57,58,59,60,61,62,65,78,90,94,],[58,58,58,58,58,58,58,58,58,-60,-61,-62,-63,-64,-65,58,58,58,-66,]),'INT':([6,35,38,44,45,46,48,51,56,57,58,59,60,61,62,65,78,90,94,],[59,59,59,59,59,59,59,59,59,-60,-61,-62,-63,-64,-65,59,59,59,-66,]),'BOOL':([6,35,38,44,45,46,48,51,56,57,58,59,60,61,62,65,78,90,94,],[60,60,60,60,60,60,60,60,60,-60,-61,-62,-63,-64,-65,60,60,60,-66,]),'BYTES':([6,35,38,44,45,46,48,51,56,57,58,59,60,61,62,65,78,90,94,],[61,61,61,61,61,61,61,61,61,-60,-61,-62,-63,-64,-65,61,61,61,-66,]),'OPERATION':([6,35,38,44,45,46,48,51,56,57,58,59,60,61,62,65,78,90,94,],[62,62,62,62,62,62,62,62,62,-60,-61,-62,-63,-64,-65,62,62,62,-66,]),'LPARENS':([6,35,38,44,45,46,48,51,56,57,58,59,60,61,62,65,73,78,82,83,84,86,87,90,91,93,94,96,],[63,63,63,63,63,63,63,63,63,-60,-61,-62,-63,-64,-65,63,85,63,-16,-17,-18,-14,-15,63,85,85,-66,-19,]),'NUMBER':([57,58,59,60,61,62,73,82,83,84,86,87,91,93,94,96,],[-60,-61,-62,-63,-64,-65,82,-16,-17,-18,-14,-15,82,82,-66,-19,]),'TEXT':([57,58,59,60,61,62,73,82,83,84,86,87,91,93,94,96,],[-60,-61,-62,-63,-64,-65,84,-16,-17,-18,-14,-15,84,84,-66,-19,]),'TRUE':([57,58,59,60,61,62,73,82,83,84,86,87,91,93,94,96,],[-60,-61,-62,-63,-64,-65,86,-16,-17,-18,-14,-15,86,86,-66,-19,]),'FALSE':([57,58,59,60,61,62,73,82,83,84,86,87,91,93,94,96,],[-60,-61,-62,-63,-64,-65,87,-16,-17,-18,-14,-15,87,87,-66,-19,]),'RPARENS':([57,58,59,60,61,62,82,83,84,86,87,92,94,95,96,],[-60,-61,-62,-63,-64,-65,-16,-17,-18,-14,-15,94,-66,96,-19,]),'LPAIR':([63,],[78,]),'PAIR_CONSTRUCTOR':([85,],[91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'execution':([0,],[1,]),'compound_statement':([0,5,],[2,54,]),'body':([0,39,40,42,68,77,],[3,66,67,68,80,89,]),'stmt':([0,5,53,75,],[4,4,74,74,]),'type':([6,35,38,44,45,46,48,51,56,65,78,90,],[56,64,65,69,70,71,72,73,77,79,90,92,]),'value':([73,91,93,],[81,93,95,]),'bool':([73,91,93,],[83,83,83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> execution","S'",1,None,None,None),
  ('execution -> compound_statement','execution',1,'p_execution','main.py',235),
  ('execution -> compound_statement SCOLON','execution',2,'p_execution','main.py',236),
  ('execution -> body','execution',1,'p_execution','main.py',237),
  ('compound_statement -> stmt','compound_statement',1,'p_compound_statement','main.py',244),
  ('compound_statement -> compound_statement SCOLON stmt','compound_statement',3,'p_compound_statement','main.py',245),
  ('body -> LBRACKET compound_statement SCOLON RBRACKET','body',4,'p_body','main.py',254),
  ('body -> LBRACKET compound_statement RBRACKET','body',3,'p_body','main.py',255),
  ('body -> LBRACKET RBRACKET','body',2,'p_body','main.py',256),
  ('stmt -> LAMBDA type type body','stmt',4,'p_lambda_statement','main.py',263),
  ('stmt -> DROP','stmt',1,'p_statement_drop','main.py',270),
  ('stmt -> DUP','stmt',1,'p_statement_dup','main.py',277),
  ('stmt -> SWAP','stmt',1,'p_statement_swap','main.py',284),
  ('stmt -> UNIT','stmt',1,'p_statement_unit','main.py',291),
  ('bool -> TRUE','bool',1,'p_bool','main.py',298),
  ('bool -> FALSE','bool',1,'p_bool','main.py',299),
  ('value -> NUMBER','value',1,'p_statement_value','main.py',303),
  ('value -> bool','value',1,'p_statement_value','main.py',304),
  ('value -> TEXT','value',1,'p_statement_value','main.py',305),
  ('value -> LPARENS PAIR_CONSTRUCTOR value value RPARENS','value',5,'p_statement_value','main.py',306),
  ('stmt -> EQ','stmt',1,'p_statement_generic_comparison','main.py',313),
  ('stmt -> NEQ','stmt',1,'p_statement_generic_comparison','main.py',314),
  ('stmt -> LT','stmt',1,'p_statement_generic_comparison','main.py',315),
  ('stmt -> GT','stmt',1,'p_statement_generic_comparison','main.py',316),
  ('stmt -> LE','stmt',1,'p_statement_generic_comparison','main.py',317),
  ('stmt -> GE','stmt',1,'p_statement_generic_comparison','main.py',318),
  ('stmt -> OR','stmt',1,'p_boolean_comparison','main.py',338),
  ('stmt -> AND','stmt',1,'p_boolean_comparison','main.py',339),
  ('stmt -> XOR','stmt',1,'p_boolean_comparison','main.py',340),
  ('stmt -> COMPARE','stmt',1,'p_compare_operation','main.py',368),
  ('stmt -> NEG','stmt',1,'p_integer_operations','main.py',383),
  ('stmt -> ABS','stmt',1,'p_integer_operations','main.py',384),
  ('stmt -> ADD','stmt',1,'p_integer_operations','main.py',385),
  ('stmt -> SUB','stmt',1,'p_integer_operations','main.py',386),
  ('stmt -> MUL','stmt',1,'p_integer_operations','main.py',387),
  ('stmt -> EDIV','stmt',1,'p_integer_operations','main.py',388),
  ('stmt -> LSL','stmt',1,'p_integer_operations','main.py',389),
  ('stmt -> LSR','stmt',1,'p_integer_operations','main.py',390),
  ('stmt -> SIZE','stmt',1,'p_size_operation','main.py',426),
  ('stmt -> CONCAT','stmt',1,'p_string_operations','main.py',435),
  ('stmt -> SLICE','stmt',1,'p_string_operations','main.py',436),
  ('stmt -> PAIR','stmt',1,'p_pair_operations','main.py',453),
  ('stmt -> CAR','stmt',1,'p_pair_operations','main.py',454),
  ('stmt -> CDR','stmt',1,'p_pair_operations','main.py',455),
  ('stmt -> EMPTY_SET type','stmt',2,'p_set_operations','main.py',476),
  ('stmt -> MEM','stmt',1,'p_set_operations','main.py',477),
  ('stmt -> UPDATE','stmt',1,'p_set_operations','main.py',478),
  ('stmt -> EMPTY_MAP type type','stmt',3,'p_map_operations','main.py',498),
  ('stmt -> MAP body','stmt',2,'p_map_operations','main.py',499),
  ('stmt -> ITER body','stmt',2,'p_map_operations','main.py',500),
  ('stmt -> GET','stmt',1,'p_map_operations','main.py',501),
  ('stmt -> IF_CONS body body','stmt',3,'p_if_cons','main.py',548),
  ('stmt -> SOME','stmt',1,'p_option_operations','main.py',564),
  ('stmt -> NONE type','stmt',2,'p_option_operations','main.py',565),
  ('stmt -> LEFT type','stmt',2,'p_union_operations','main.py',577),
  ('stmt -> RIGHT type','stmt',2,'p_union_operations','main.py',578),
  ('stmt -> CONS','stmt',1,'p_list_operations','main.py',590),
  ('stmt -> NIL type','stmt',2,'p_list_operations','main.py',591),
  ('stmt -> NOT','stmt',1,'p_boolean_not','main.py',609),
  ('stmt -> EXEC','stmt',1,'p_exec','main.py',621),
  ('type -> NAT','type',1,'p_statement_type','main.py',637),
  ('type -> STRING','type',1,'p_statement_type','main.py',638),
  ('type -> INT','type',1,'p_statement_type','main.py',639),
  ('type -> BOOL','type',1,'p_statement_type','main.py',640),
  ('type -> BYTES','type',1,'p_statement_type','main.py',641),
  ('type -> OPERATION','type',1,'p_statement_type','main.py',642),
  ('type -> LPARENS LPAIR type type RPARENS','type',5,'p_statement_type','main.py',643),
  ('stmt -> PUSH type value','stmt',3,'p_statement_push','main.py',660),
  ('stmt -> FAILWITH','stmt',1,'p_statement_failwith','main.py',684),
]
