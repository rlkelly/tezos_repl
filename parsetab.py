
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS ADD AND BOOL BYTES CAR CDR COMPARE CONCAT CONS DROP DUP EDIV EMPTY_MAP EMPTY_SET EQ FAILWITH FALSE GE GET GT INT LBRACKET LE LEFT LPAIR LPARENS LSL LSR LT MEM MUL NAT NEG NEQ NIL NONE NOT NUMBER OR PAIR PAIR_CONSTRUCTOR PUSH RBRACKET RIGHT RPARENS SCOLON SIZE SLICE SOME STRING SUB SWAP TEXT TRUE UNIT UPDATE XORexecution : statement\n            | statement execution statement : DROP SCOLONstatement : DUP SCOLONstatement : SWAP SCOLONstatement : UNIT SCOLONbool : TRUE\n        | FALSE value : NUMBER\n        | bool\n        | TEXT\n        | LPARENS PAIR_CONSTRUCTOR value value RPARENS statement : EQ SCOLON\n        | NEQ SCOLON\n        | LT SCOLON\n        | GT SCOLON\n        | LE SCOLON\n        | GE SCOLON statement : OR SCOLON\n        | AND SCOLON\n        | XOR SCOLON statement : COMPARE SCOLONstatement : NEG SCOLON\n         | ABS SCOLON\n         | ADD SCOLON\n         | SUB SCOLON\n         | MUL SCOLON\n         | EDIV SCOLON\n         | LSL SCOLON\n         | LSR SCOLON statement : CONCAT SCOLON\n            | SIZE SCOLON\n            | SLICE SCOLON statement : PAIR SCOLON\n            | CAR SCOLON\n            | CDR SCOLON statement : EMPTY_SET TYPE SCOLON\n            | MEM SCOLON\n            | UPDATE SCOLON statement : SOME SCOLON\n            | NONE TYPE SCOLON statement : LEFT TYPE SCOLON\n            | RIGHT TYPE SCOLON statement : CONS SCOLON\n            | NIL TYPE SCOLON statement : NOT SCOLONTYPE : NAT\n        | STRING\n        | INT\n        | BOOL\n        | BYTES\n        | LPARENS LPAIR TYPE TYPE RPARENS statement : PUSH TYPE value SCOLONstatement : FAILWITH SCOLON'
    
_lr_action_items = {'DROP':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[3,3,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'DUP':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[4,4,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'SWAP':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[5,5,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'UNIT':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[6,6,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'EQ':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[7,7,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'NEQ':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[8,8,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'LT':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[9,9,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'GT':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[10,10,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'LE':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[11,11,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'GE':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[12,12,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'OR':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[13,13,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'AND':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[14,14,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'XOR':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[15,15,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'COMPARE':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[16,16,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'NEG':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[17,17,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'ABS':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[18,18,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'ADD':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[19,19,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'SUB':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[20,20,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'MUL':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[21,21,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'EDIV':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[22,22,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'LSL':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[23,23,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'LSR':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[24,24,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'CONCAT':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[25,25,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'SIZE':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[26,26,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'SLICE':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[27,27,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'PAIR':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[28,28,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'CAR':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[29,29,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'CDR':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[30,30,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'EMPTY_SET':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[31,31,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'MEM':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[32,32,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'UPDATE':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[33,33,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'SOME':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[34,34,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'NONE':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[35,35,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'LEFT':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[36,36,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'RIGHT':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[37,37,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'CONS':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[38,38,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'NIL':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[39,39,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'NOT':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[40,40,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'PUSH':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[41,41,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'FAILWITH':([0,2,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[42,42,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'$end':([1,2,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,92,93,94,95,104,],[0,-1,-2,-3,-4,-5,-6,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-38,-39,-40,-44,-46,-54,-37,-41,-42,-43,-45,-53,]),'SCOLON':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,38,40,42,72,73,74,75,76,77,82,83,84,86,96,97,98,99,101,102,108,110,],[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,85,87,89,90,-47,-48,-49,-50,-51,92,93,94,95,104,-9,-10,-11,-7,-8,-52,-12,]),'NAT':([31,35,36,37,39,41,73,74,75,76,77,91,103,108,],[73,73,73,73,73,73,-47,-48,-49,-50,-51,73,73,-52,]),'STRING':([31,35,36,37,39,41,73,74,75,76,77,91,103,108,],[74,74,74,74,74,74,-47,-48,-49,-50,-51,74,74,-52,]),'INT':([31,35,36,37,39,41,73,74,75,76,77,91,103,108,],[75,75,75,75,75,75,-47,-48,-49,-50,-51,75,75,-52,]),'BOOL':([31,35,36,37,39,41,73,74,75,76,77,91,103,108,],[76,76,76,76,76,76,-47,-48,-49,-50,-51,76,76,-52,]),'BYTES':([31,35,36,37,39,41,73,74,75,76,77,91,103,108,],[77,77,77,77,77,77,-47,-48,-49,-50,-51,77,77,-52,]),'LPARENS':([31,35,36,37,39,41,73,74,75,76,77,88,91,97,98,99,101,102,103,105,107,108,110,],[78,78,78,78,78,78,-47,-48,-49,-50,-51,100,78,-9,-10,-11,-7,-8,78,100,100,-52,-12,]),'NUMBER':([73,74,75,76,77,88,97,98,99,101,102,105,107,108,110,],[-47,-48,-49,-50,-51,97,-9,-10,-11,-7,-8,97,97,-52,-12,]),'TEXT':([73,74,75,76,77,88,97,98,99,101,102,105,107,108,110,],[-47,-48,-49,-50,-51,99,-9,-10,-11,-7,-8,99,99,-52,-12,]),'TRUE':([73,74,75,76,77,88,97,98,99,101,102,105,107,108,110,],[-47,-48,-49,-50,-51,101,-9,-10,-11,-7,-8,101,101,-52,-12,]),'FALSE':([73,74,75,76,77,88,97,98,99,101,102,105,107,108,110,],[-47,-48,-49,-50,-51,102,-9,-10,-11,-7,-8,102,102,-52,-12,]),'RPARENS':([73,74,75,76,77,97,98,99,101,102,106,108,109,110,],[-47,-48,-49,-50,-51,-9,-10,-11,-7,-8,108,-52,110,-12,]),'LPAIR':([78,],[91,]),'PAIR_CONSTRUCTOR':([100,],[105,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'execution':([0,2,],[1,43,]),'statement':([0,2,],[2,2,]),'TYPE':([31,35,36,37,39,41,91,103,],[72,82,83,84,86,88,103,106,]),'value':([88,105,107,],[96,107,109,]),'bool':([88,105,107,],[98,98,98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> execution","S'",1,None,None,None),
  ('execution -> statement','execution',1,'p_statement','main.py',232),
  ('execution -> statement execution','execution',2,'p_statement','main.py',233),
  ('statement -> DROP SCOLON','statement',2,'p_statement_drop','main.py',240),
  ('statement -> DUP SCOLON','statement',2,'p_statement_dup','main.py',244),
  ('statement -> SWAP SCOLON','statement',2,'p_statement_swap','main.py',248),
  ('statement -> UNIT SCOLON','statement',2,'p_statement_unit','main.py',252),
  ('bool -> TRUE','bool',1,'p_bool','main.py',256),
  ('bool -> FALSE','bool',1,'p_bool','main.py',257),
  ('value -> NUMBER','value',1,'p_statement_value','main.py',261),
  ('value -> bool','value',1,'p_statement_value','main.py',262),
  ('value -> TEXT','value',1,'p_statement_value','main.py',263),
  ('value -> LPARENS PAIR_CONSTRUCTOR value value RPARENS','value',5,'p_statement_value','main.py',264),
  ('statement -> EQ SCOLON','statement',2,'p_statement_generic_comparison','main.py',271),
  ('statement -> NEQ SCOLON','statement',2,'p_statement_generic_comparison','main.py',272),
  ('statement -> LT SCOLON','statement',2,'p_statement_generic_comparison','main.py',273),
  ('statement -> GT SCOLON','statement',2,'p_statement_generic_comparison','main.py',274),
  ('statement -> LE SCOLON','statement',2,'p_statement_generic_comparison','main.py',275),
  ('statement -> GE SCOLON','statement',2,'p_statement_generic_comparison','main.py',276),
  ('statement -> OR SCOLON','statement',2,'p_boolean_comparison','main.py',293),
  ('statement -> AND SCOLON','statement',2,'p_boolean_comparison','main.py',294),
  ('statement -> XOR SCOLON','statement',2,'p_boolean_comparison','main.py',295),
  ('statement -> COMPARE SCOLON','statement',2,'p_compare_operation','main.py',320),
  ('statement -> NEG SCOLON','statement',2,'p_integer_operations','main.py',332),
  ('statement -> ABS SCOLON','statement',2,'p_integer_operations','main.py',333),
  ('statement -> ADD SCOLON','statement',2,'p_integer_operations','main.py',334),
  ('statement -> SUB SCOLON','statement',2,'p_integer_operations','main.py',335),
  ('statement -> MUL SCOLON','statement',2,'p_integer_operations','main.py',336),
  ('statement -> EDIV SCOLON','statement',2,'p_integer_operations','main.py',337),
  ('statement -> LSL SCOLON','statement',2,'p_integer_operations','main.py',338),
  ('statement -> LSR SCOLON','statement',2,'p_integer_operations','main.py',339),
  ('statement -> CONCAT SCOLON','statement',2,'p_string_operations','main.py',372),
  ('statement -> SIZE SCOLON','statement',2,'p_string_operations','main.py',373),
  ('statement -> SLICE SCOLON','statement',2,'p_string_operations','main.py',374),
  ('statement -> PAIR SCOLON','statement',2,'p_pair_operations','main.py',392),
  ('statement -> CAR SCOLON','statement',2,'p_pair_operations','main.py',393),
  ('statement -> CDR SCOLON','statement',2,'p_pair_operations','main.py',394),
  ('statement -> EMPTY_SET TYPE SCOLON','statement',3,'p_set_operations','main.py',411),
  ('statement -> MEM SCOLON','statement',2,'p_set_operations','main.py',412),
  ('statement -> UPDATE SCOLON','statement',2,'p_set_operations','main.py',413),
  ('statement -> SOME SCOLON','statement',2,'p_option_operations','main.py',429),
  ('statement -> NONE TYPE SCOLON','statement',3,'p_option_operations','main.py',430),
  ('statement -> LEFT TYPE SCOLON','statement',3,'p_union_operations','main.py',438),
  ('statement -> RIGHT TYPE SCOLON','statement',3,'p_union_operations','main.py',439),
  ('statement -> CONS SCOLON','statement',2,'p_list_operations','main.py',444),
  ('statement -> NIL TYPE SCOLON','statement',3,'p_list_operations','main.py',445),
  ('statement -> NOT SCOLON','statement',2,'p_boolean_not','main.py',455),
  ('TYPE -> NAT','TYPE',1,'p_statement_type','main.py',467),
  ('TYPE -> STRING','TYPE',1,'p_statement_type','main.py',468),
  ('TYPE -> INT','TYPE',1,'p_statement_type','main.py',469),
  ('TYPE -> BOOL','TYPE',1,'p_statement_type','main.py',470),
  ('TYPE -> BYTES','TYPE',1,'p_statement_type','main.py',471),
  ('TYPE -> LPARENS LPAIR TYPE TYPE RPARENS','TYPE',5,'p_statement_type','main.py',472),
  ('statement -> PUSH TYPE value SCOLON','statement',4,'p_statement_push','main.py',487),
  ('statement -> FAILWITH SCOLON','statement',2,'p_statement_failwith','main.py',505),
]
